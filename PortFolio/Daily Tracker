function dailytrackerEmail() {
  
  let ss = SpreadsheetApp.getActiveSpreadsheet();

/**
 *1. Click Event
 */

// Ask stupid question
  let ui = SpreadsheetApp.getUi();
  let inputbox = ui.prompt("谁是世界上最可爱的人...?")

    if( inputbox.getResponseText() == "" ) {
          return
        }else if ((/HONG KHENG YOONG/ig).test(inputbox.getResponseText()) == false ){
           return  ui.alert("Go Wash your EyES and FACE the WALL!");
        };

  console.log("Calculating Sheets numbers")


// Check sheets length to identify if used this code before  
    if(ss.getSheets().length > 15 ){
        return ui.alert(`Sorry! 
        You've run Code before! 

        This is Life, bye~ :D`);
    }
  

//Reminder
      let doubleconfirm = ui.alert("Have you allowed access and updated the Namelist, Month and Year?", ui.ButtonSet.YES_NO);

      if(doubleconfirm == ui.Button.YES){
        console.log("Start Executing~ Please wait...")
      }else{
        console.log("errrr...");
        return ui.alert( " :) ");
        }


     let allowNamelist_Access = ss.getSheetByName("Parameter").getRange("C11").getValues();

      if (allowNamelist_Access == "#REF!"){
        return ui.alert("Please Allow Access in C11 :)");
      }
 

/**
 * Update Namelist
 */

  //Get namelist
  let monthly_namelist = ss.getSheetByName("Parameter").getRange("N1").getDataRegion().getValues();

  //clear namelist content
  ss.getSheetByName("Parameter").getRange("T:W").clearContent();

  SpreadsheetApp.flush();
  SpreadsheetApp.flush();

  //write name data
  ss.getSheetByName("Parameter").getRange(1,20,monthly_namelist.length,monthly_namelist[0].length).setValues(monthly_namelist);

  SpreadsheetApp.flush();
  SpreadsheetApp.flush();



/**
 *2. Rename Dashboard
 */

  let dashboard_sheetname = ss.getSheetByName("Parameter").getRange("B2").getValue().toUpperCase();
  ss.getSheetByName("dashboard").setName(dashboard_sheetname);
  SpreadsheetApp.flush();


/**
 *3. Duplicate Sheets and change Sheets Name
 */

//get template sheetsName
let tsheet = ss.getSheetByName("Daily Template");


//// double check sheetname format
// let sheetName1 = ss.getSheetByName("Parameter").getRange("H1").getDataRegion().getValues();
// console.log(sheetName1);


//make sure columns nearby data region is empty, and 2nd col is text format
//sort sheetname in descending order
let sheetName = ss.getSheetByName("Parameter").getRange("H1").getDataRegion().getValues().sort( (a,b) => {
  var dateA = new Date(a[0]);
  var dateB = new Date(b[0]);
  return dateB - dateA;}
);

//// console.log(sheetName);


////for loop duplicate sheets
for (datename of sheetName){
ss.setActiveSheet(tsheet);
ss.duplicateActiveSheet();
ss.getActiveSheet().setName(datename[1]);
SpreadsheetApp.flush();
//set protection
SpreadsheetApp.getActive().getRange('I:S').protect().addEditors(['slim17@ext.uber.com', 'jlim33@ext.uber.com', 'cng16@ext.uber.com']);
SpreadsheetApp.flush();
};

// End here



/**
 *4. set VlookUP Range
 * 
 */

// set Range Parameter in Array
// remember to put "" to mention input is string

let vlook_Range_Array = [
//vlook_total  
["$I:$O,2",dashboard_sheetname,"B2"],
//vlook_open 
["$I:$O,4",dashboard_sheetname,"C2"],
// vlook_waiting 
["$I:$O,5",dashboard_sheetname,"D2"],
// vlook_escalate 
["$I:$O,6",dashboard_sheetname,"E2"],
//vlook_resolved
["$I:$O,7",dashboard_sheetname,"F2"],
//vlook_dp
["$I:$Q,8",dashboard_sheetname,"H2"],
//vlook_eater
["$I:$Q,9",dashboard_sheetname,"I2"],
//vlook_dpSolved 
["$I:$S,10",dashboard_sheetname,"J2"],
//vlook_eaterSolved 
["$I:$S,11",dashboard_sheetname,"K2"]]


////Trigger Vlookup Fn
vlook_Range_Array.forEach( s => dashboard_vlook(...s) )


//// Function of Vlookup
function dashboard_vlook(vlookRange,sheetNAME,cellNotation){
let vlookStore = sheetName.map( datename => 
`+vlookup($A2:$A,'${datename[1]}'!${vlookRange},False)`
);
let vlookResult = `ArrayFormula(filter( ${vlookStore.join("")} , $A2:A <> ""))`;
SpreadsheetApp.flush();
ss.getSheetByName(sheetNAME).getRange(cellNotation).setFormula(vlookResult);
};


// End Here


// duplicate summary
ss.setActiveSheet(ss.getSheetByName("Summary"));
ss.duplicateActiveSheet();
SpreadsheetApp.flush();
ss.getActiveSheet().setName("Summary2");
SpreadsheetApp.flush();
ss.setActiveSheet(ss.getSheetByName("Summary"));
ss.deleteActiveSheet();
SpreadsheetApp.flush();
ss.setActiveSheet(ss.getSheetByName("Summary2"));
ss.getActiveSheet().setName("Summary");
SpreadsheetApp.flush();




// hide col and sheets

  ss.getSheetByName(dashboard_sheetname).getRange('S:U').activate();
  ss.getActiveSheet().hideColumns(ss.getActiveRange().getColumn(), ss.getActiveRange().getNumColumns());
  ss.getSheetByName(dashboard_sheetname).getRange('V:V').activate();
  ss.getSheetByName(dashboard_sheetname).getRange('M:M').activate();
  ss.getActiveSheet().hideColumns(ss.getActiveRange().getColumn(), ss.getActiveRange().getNumColumns());

  ss.getSheetByName("Parameter").getDataRange().activate();
  ss.getActiveSheet().protect().addEditors(['slim17@ext.uber.com', 'jlim33@ext.uber.com', 'cng16@ext.uber.com']);

  ss.getSheetByName("Daily Template").getDataRange().activate();
  ss.getActiveSheet().protect().addEditors(['slim17@ext.uber.com', 'jlim33@ext.uber.com', 'cng16@ext.uber.com']);

  
  ss.getSheetByName(dashboard_sheetname).getDataRange().activate();
  ss.getActiveSheet().protect().addEditors(['slim17@ext.uber.com', 'jlim33@ext.uber.com', 'cng16@ext.uber.com']);

  ss .getSheetByName("Summary").getDataRange().activate();
  ss.getActiveSheet().protect().addEditors(['slim17@ext.uber.com', 'jlim33@ext.uber.com', 'cng16@ext.uber.com']);


  ss.getSheetByName("Parameter").getRange('A1').activate();
  ss.getActiveSheet().hideSheet();

  ss.getSheetByName("Daily Template").getRange('A1').activate();
  ss.getActiveSheet().hideSheet();

  


};
