function getCertainCol() {

let ss = SpreadsheetApp.getActiveSpreadsheet(); 

//define excluded Sheets by name
    let excludedSheets = [];

// let iSheets = lib.transformSheet2Obj(excludedSheets);



// array data

let arr = [
    ["jack",2,"MCD"],
    [4,5,6],
    [7,8,9]
];


/** Get Certain Col. by header
 *  must define "excludedCOLitem" in array format
 */

let excludedCOLitem = [arr[0][0],(arr[0][2])];
console.log(excludedCOLitem);
console.log(getColbyHeader(arr,excludedCOLitem));



//// Function of getting certain Col by Header
// function getColbyHeader (arr,excludedCOLitem ){
// let arr2 = arr[0].reduce( (acc,item,i) =>  
//  {if( !excludedCOLitem.some( e => e == item) ) {
//       return  ((acc, arr ,i) => { 
//           acc.push(arr.map( (el) => el[i]));
//           return acc;
//            })(acc, arr ,i);
//  }else{
//    return acc ;
//  }} ,[])
//  return (function (a){  return Object.keys(arr2[0]).map(function (c) { return arr2.map(function (r) { return r[c]; }); });})(arr2);
//  ;}

//// End


//// Function of getting certain Col by index

// function getColbyindex (arr,fn = (i => typeof i == 'number' ) ){
// //specify your f(i) eg. i => i == 0 || i == 1
//      let arr2  =  arr[0].reduce( (acc,item,i) =>  
//                {if( fn(i) ) {
//             return  ((acc, arr ,i) => { 
//               acc.push(arr.map( (el) => el[i]));
//               return acc;
//               })(acc, arr ,i);
//     }else{
//       return acc ;
//     }},[]);

// return (function (a){  return Object.keys(arr2[0]).map(function (c) { return arr2.map(function (r) { return r[c]; }); });})(arr2);

//     }

// console.log(getColbyindex(arr, i => i == 0 || i == 1));
// console.log(getColbyindex(arr));

// End




//Transpose function
// function transpose(a)
// {  return Object.keys(a[0]).map(function (c) { return a.map(function (r) { return r[c]; }); });}




}
